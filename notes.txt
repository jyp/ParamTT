Let's add:

       Γ,i,j ⊢ a : T
--------------------------------
  Γ,j,i ⊢  sw i j a : Sw i j T

Note that Sw is not the same thing as sw.

according to Remarks.agda, we should have:

sw i j ((a ,i p) ,j (q ,i r)) = ((a ,i q) ,j (p ,i r))
Sw i j (Σj (Σi A P) (Σi Q R)) = (Σj (Σi A Q) (Σi P (flip R)))

where
flip R x y z = R x z y


Where does this take us?

(λx:T. x.i)   : (x:T) -> T.i x
(λx:T. x.i).j : (x:T) -> (x' : T.j x) -> T.i.j x x' (x.i)

(λx:T. x.i).j a p            : T.i.j a(i0) p a.i
((λx. x.i) (a ,j p)).j
(a ,j p).i.j                 : T.i.j a(i0) p a.i
(a ,j p)                     : T

((a(i0) ,i a.i) ,j (p(i0) ,i p.i))                     : T
((a(i0) ,j p(i0)) ,i (a.i ,j p.i))                     : Sw i j T

((a(i0) ,j p(i0)) ,i (a.i ,j p.i)).j                     : (Sw i j T).j (a(i0) ,i a.i)
((a(i0) ,j p(i0)) ,i (a.i ,j p.i)).j.i                   : ((Sw i j T).j (a(i0) ,i a.i)).i p
                                                         : (Sw i j T).j.i a(i0) a.i p

So we would like:

(Sw i j T).j.i  === flip T.i.j
a.i.j === (sw i j a).j.i


Some sanity checking:

   Γ,j,i ⊢  sw i j a : Sw i j T
------------------------------------------------------
   Γ,j ⊢  (sw i j a).i : (Sw i j T).i (sw i j a)(i0)
------------------------------------------------------
   Γ,j ⊢  (sw i j a).i : (Sw i j T).i a(i0)
--------------------------------------------------------------------
   Γ ⊢  (sw i j a).i.j : ((Sw i j T).i a(i0)).j ((sw i j a).i)(j0)
---------------------------------------------------------------------------
   Γ ⊢  (sw i j a).i.j : (Sw i j T).i.j a(i0)(j0) a(i0).j (sw i j a(j0)).i
---------------------------------------------------------------------------
   Γ ⊢  (sw i j a).i.j : (Sw i j T).i.j a(i0)(j0) a(i0).j a(j0).i
---------------------------------------------------------------------------
   Γ ⊢  a.j.i : T.j.i a(i0)(j0) a(j0).i a(i0).j

And compute like this:

(λx:T. x.i).j a p

= 
((λx. x.i) (a ,j p)).j

= subst
(a ,j p).i.j

= {- expanding -}
((a(i0) ,i a.i) ,j (p(i0) ,i p.i)).i.j

= {- swapping -}
((a(i0) ,j p(i0)) ,i (a.i ,j p.i)).j.i

So: this will never reduce!


Do we have a problem with canonical forms?
Let us check that we calculate, if T were a function type.

We have:
  T = A -> B
  T.i.j f fi fj = (x:A) -> (xi : A.i) -> (xj : A.j) -> (xij : A.i.j x xi xj) -> B.i.j (f x) (fi xi) (fj xj)

And we can check that (a ,j p) behaves like a function:

(a ,j p).i.j x xj xi xij
= (a ,j p) ((x,j xj) ,i (xi ,j xij))
= (a ,j p) X
= (a X(j0) ,j p X(j0) X.j)
= (a (x ,i xj) ,j p (x ,i xj) X.j)


===============
Projections of pairs:

T = Σ A P

T(i0) = Σ A(i0) P(i0)
T.i (a,p) = Σ (A.i a) × \x -> P.i a x p

o=(b ,i q) : T
b : T(i0)
  : Σ A(i0) P(i0)
q : T.i b
  : Σ (A.i b.1) (\x -> P.i b.1 x b.2)


q.2 : P.i b.1 q.1 b.2


o.1 = (b.1 ,i q.1)

o.2 : P o.1

o.2 = (b.2 ,i ?)

? : (P o.1).i (o.2)(i0)
  : P.i o(i0).1 o.1.i b.2
  : P.i o(i0).1 o.i.1 b.2
  : P.i o(i0).1 q.1 b.2

The above assumes a.1.i = a.i.1

Let us check:

a : Σ A P
a.1 : A
a.i.1 : A.i a(i0).1

a.i : (Σ A P).i a(i0)
    : (x : A.i a(i0).1) × (P.i a(i0).1 x a(i0).2)


We also can have a.2.i = a.i.2

a.2 : P a.1
a.2.i : P.i a(i0).1 a.i.1 a(i0).2

a.i.2 : P.i a(i0).1 a.i.1 a(i0).2


===============

t = ( (a ,i p) ,j (q ,i r) ) : U

t.i : (a ,j q) -> U
t.i.j : (x:a) -> q x -> p x -> U

(q ,i r) : (a ,i p) -> U
r : (x : a) -> p x -> q x -> U

===============

(a ,j p) : U

(a ,j p).i : (a(i0) ,j p(i0)) -> U

(a ,j p).i x = (a.i x ,j \y -> p.i x(j0) y x.j)

=================

(a ,j p) : A -> B
(a ,j p).i x xi = ((a ,j p) (x ,i xi)).i
                = ((a (x(j0) ,i xi(j0)) ,j p (x(j0) ,i xi(j0)) (x ,i xi).j)).i

================

T : U
T.i : T -> U
T.i.j : (x:T) -> T.j x -> T.i x -> U

Theorem[type-swap]: If T : U then T.i.j x y z = T.j.i x z y
Proof:
Let T be the square (A,P,Q,R),
where
A = T(i0)(j0)
P = T(j0).i
Q = T(i0).j
R = T.j.i

T.i.j x y z =
((A ,i P) ,j (Q ,i R)).i.j x y z =
(((A ,i P) ,j (Q ,i R)).i (x ,j y)).j z =
(((A ,i P) ,j (Q ,i R)).i (x ,j y)).j z =
(l : ... ×j (Q ,i R).i x l y).j z =
R x z y =
T.j.i x z y

-------------

Proving U.i.j x y z = U.j.i x z y is a contradiction.

Apply the above:
We can build (A,P,Q,R), equal to U,
where
A = U
P = U.i
Q = U.j
R = U.j.i



U.i.j x y z =
((A ,i P) ,j (Q ,i R)).i.j x y z =
(((A ,i P) ,j (Q ,i R)).i (x ,j y)).j z =
(((A ,i P) ,j (Q ,i R)).i (x ,j y)).j z =
(l : ... ×j (Q ,i R).i x l y).j z =
R x z y =
U.j.i x z y

Which is a contradiction.

We must reject either the pairing rule or the definition of .i on colored pair types
---------------

Theorem [value-swap]
if p : T then p.i.j has the same type as p.j.i

p.i : T.i p
p.i.j : T.i.j p p.j p.i

p.j.i : T.j.i p p.i p.j
      : T.i.j p p.j p.i (by [type-swap])

==========================

So what is ((A ,i P) ,j (Q ,i R)).i.j x y z ?

((A ,i P) ,j (Q ,i R)).i.j x y z =

(((A ,i P) ,j (Q ,i R)).i (x ,i y)).j z =

==========================

When is T.i.j == T.j.i?

Let T = ((A ,i P) ,j (Q ,i R))

T.j.i = ((A ,i P) ,j (Q ,i R)).j.i
      
T.i.j = ((A ,i P) ,j (Q ,i R)).i.j
      = ((A ,j P) ,i (Q ,j R)).j.i


So we have the equality if

((A ,j P) ,i (Q ,j R)) = ((A ,i P) ,j (Q ,i R))

ie.
(A ,j P) = ((A ,i P) ,j (Q ,i R))(i0)
(Q ,j R) = ((A ,i P) ,j (Q ,i R)).i

ie.
(A ,j P) = (A ,j Q)
Q = ((A ,i P) ,j (Q ,i R)).i(j0)
R = ((A ,i P) ,j (Q ,i R)).i.j

ie.
P = Q
R = ((A ,i P) ,j (Q ,i R)).i.j
  = T.i.j

ie.
only if R is itself a swap.
(so swap is involutive)

===========================

In sum, swaps never reduce. The only thing to add in the
evaluator is to add (A ,i B) = A if B = A.i.


