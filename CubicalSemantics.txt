
We interpret terms as hypercubes. So values depend on a list of colors
(χ) in addition to an environment of values (ρ).

⟦x⟧ρχ = ρ(x,χ)
⟦t.i⟧ρχ = ⟦t⟧(extend ρ)(χ,i)
⟦a,ᵢ p⟧ρχ = ⟦a⟧ρχ      if i ∉ χ
          = ⟦p⟧ρ(χ-i)  if i ∈ χ
⟦λx:A.t⟧ρχ = (for every o ⊆ χ) λxₒ. ⟦t⟧(ρ,(o,xₒ))χ
⟦f a⟧ρχ = (for every o ⊆ χ) ⟦f⟧ρχ ⟦f⟧ρo
⟦∀x:A. B⟧ρχ = (for every o ⊆ χ)(for every i ⊂ χ)
              λfᵢ. ∀xₒ:⟦A⟧ρo. ⟦B⟧(ρ,(o,xₒ))χ (fᵢ xᵢ)

(note the strict inclusion)

The way to extend the context ρ is given by the number of colors already present in χ.

if zero, we extend the context normally:

a : T      yields aᵢ : Tᵢ a
p : Tⱼ a   yields pᵢ : Tⱼᵢ a aᵢ p
etc.

if one, we extend the context using shifted parametricity:

a : T      yields aᵢ : Tᵢ a
p : Tⱼ a   yields pᵢ : Tᵢⱼ a p aᵢ

and so on for any number of colors.


-----------------

Actually, it should be "easy" to pre-extend the context. That is, when
we put a variable in the context, we also put the evaluations with
fresh variables:

⟦λx:A.t⟧ρχ = (for every o ⊆ φ) λxₒ. ⟦t⟧(ρ,(o,xₒ))χ
⟦f a⟧ρχ = (for every o ⊆ φ) ⟦f⟧ρχ ⟦f⟧ρo
⟦∀x:A. B⟧ρχ = (for every o ⊆ φ)(for every i ⊂ χ)
              λfᵢ. ∀xₒ:⟦A⟧ρo. ⟦B⟧(ρ,(o,xₒ))χ (fᵢ xᵢ)

where φ is the list χ extended with an infinite list of fresh colors.
Interpreting parametricity (.i) is then just the allocation of a fresh variable to i:

⟦t.i⟧ρχ = ⟦t⟧(ρ[i/fresh₁])(χ,i)

The other rules do not change:

⟦x⟧ρχ = ρ(x,χ)
⟦a,ᵢ p⟧ρχ = ⟦a⟧ρχ      if i ∉ χ
          = ⟦p⟧ρ(χ-i)  if i ∈ χ
